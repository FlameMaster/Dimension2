<?xml version="1.0" encoding="utf-8"?>
<manifest package="com.melvinhou.dimension2"
    xmlns:android="http://schemas.android.com/apk/res/android">
    <!--
    从Android 10 开始，应用即使申请了权限，也只能读写自己外部存储的私有目录，
    就是Android/data/对应应用包名 下的相关目目录。
    除此之外任何目录的读写都会被拒绝，并提示android Permission denied。
    需要在AndroidManifest.xml 文件中，在application标签中添加如下属性android:requestLegacyExternalStorage=“true”
    -->
    <!--    在清单声明不启用沙盒存储
        android:preserveLegacyExternalStorage="true"
        android:requestLegacyExternalStorage="true"
    -->
    <application
        android:name=".Dimension2Application"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:preserveLegacyExternalStorage="true"
        android:requestLegacyExternalStorage="true"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Dimension2Theme"
        android:usesCleartextTraffic="true">
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:label="@string/app_name"
            android:screenOrientation="portrait">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".test.TestActivity"
            android:exported="true">
            <!-- 隐式意图打开app -->
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <data
                    android:host="app"
                    android:scheme="dimension2" />
            </intent-filter>
        </activity>
        <activity
            android:name=".test.SampleActivity"
            android:theme="@style/KamiTheme"
            android:exported="true"/>
        <activity
            android:name=".web.WebActivity"
            android:configChanges="orientation|screenSize|keyboardHidden"
            android:screenOrientation="portrait" />
        <activity
            android:name=".pager.PagerActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name=".prespace.SpacePreActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name=".media.picture.PictureActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name=".media.picture.AlbumActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name=".media.video.VideoActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:screenOrientation="portrait" />
        <activity
            android:name=".media.video.VideoActivity2"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.melvinhou.medialibrary.video.ijk.IjkVideoActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:exported="true"
            android:screenOrientation="portrait" />
        <activity
            android:name=".media.picture.CameraActivity"
            android:exported="true"
            android:screenOrientation="portrait" />
        <activity
            android:name=".media.picture.ScanActivity"
            android:exported="true"
            android:screenOrientation="portrait" />
        <activity
            android:name=".media.music.MusicPlayerActivity"
            android:launchMode="singleTask"
            android:screenOrientation="portrait" />
        <activity
            android:name=".media.music.MusicListActivity"
            android:launchMode="singleTask"
            android:screenOrientation="portrait" />
        <activity
            android:name=".media.animation.SystemAnimationActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name=".media.animation.SvgAnimationActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name=".media.tiktok.TiktokActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name=".game.klotski.GameKlotskiActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name=".game.poker.GamePokerActivity"
            android:screenOrientation="landscape" />
        <activity
            android:name=".ar.ARActivity"
            android:exported="true"
            android:screenOrientation="portrait" />
        <activity
            android:name=".ar.ARActivity2"
            android:exported="true"
            android:screenOrientation="portrait" />
        <activity
            android:name=".ar.d3.D3Activity"
            android:screenOrientation="portrait" />
        <activity
            android:name=".ar.d3.D3ListActivity"
            android:exported="true"
            android:screenOrientation="portrait" />
        <activity
            android:name=".function.pdf.PdfActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name=".function.desktop.DesktopActivity"
            android:screenOrientation="portrait">
            <!--            <intent-filter>-->
            <!--                <action android:name="android.intent.action.MAIN" />-->
            <!--                <category android:name="android.intent.category.LAUNCHER" />-->
            <!--                <category android:name="android.intent.category.HOME" />-->
            <!--                <category android:name="android.intent.category.DEFAULT" />-->
            <!--            </intent-filter>-->
        </activity>
        <activity
            android:name=".function.zip.ZipActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name=".function.screenrecord.ScreenRecordActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name=".function.im.ImHomeActivity"
            android:exported="true"
            android:screenOrientation="portrait" />
        <activity
            android:name=".function.im.ImChatActivity"
            android:screenOrientation="portrait"
            android:windowSoftInputMode="adjustResize" />

        <meta-data
            android:name="com.google.ar.core"
            android:value="optional" /> <!-- "required"必须使用arcore or "optional"可以不使用. -->

        <receiver
            android:name=".media.music.MusicWidgetProvider"
            android:exported="false">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE" />
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/appwidget_info" />
        </receiver>

        <receiver
            android:name=".function.screenrecord.ScreenRecordBroadcastReceiver"
            android:exported="false">
            <intent-filter>
                <action android:name="screen_record_stop" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="androidx.media.session.MediaButtonReceiver"
            android:exported="false">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

        <service
            android:name=".function.screenrecord.ScreenRecordService"
            android:foregroundServiceType="mediaProjection"></service>

        <service android:name=".media.video.MediaPlayerService" />

        <!--
             在API 21之前，MediaSession使用广播接收器与媒体会话通信。不一定非得是这个广播接收器,
             但它必须处理行动"android.intent.action.MEDIA_BUTTON".
             此外，这用于在接收到媒体按钮事件(如“play”)时从非活动状态恢复服务。
             用于接受媒体播放的意图（MediaNotificationManager）
             exported必须为false，不然退出时无法关闭通知栏
        -->
        <service
            android:name=".media.music.MusicService"
            android:enabled="true"
            android:exported="false">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
        </service>
    </application>

    <supports-gl-texture android:name="GL_OES_compressed_ETC1_RGB8_texture" /> <!-- <uses-feature android:name="android.hardware.camera" -->
    <!-- android:required="true" /> -->
    <!-- <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" -->
    <!-- android:maxSdkVersion="18" /> -->
    <supports-gl-texture android:name="GL_OES_compressed_paletted_texture" />

    <uses-feature
        android:name="android.hardware.camera.ar"
        android:required="true" />

    <uses-feature
        android:glEsVersion="0x00030000"
        android:required="true" />
    <uses-feature android:name="android.hardware.camera.any" /> <!-- AR -->
    <uses-feature
        android:glEsVersion="0x00030001"
        android:required="true" /> <!-- Sceneform requires OpenGLES 3.0 or later. -->
    <uses-feature
        android:name="android.hardware.opengles.aep"
        android:required="true" />

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <!--android9.0使用前台服务的应用-->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />

    <!--录屏-->
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.INTERNET" />

    <!-- 聊天-->
    <!--允许应用程序改变网络状态-->
    <uses-permission android:name="android.permission.REORDER_TASKS" />
    <!--允许应用程序改变WIFI连接状态-->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <!--允许应用程序访问有关的网络信息-->
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <!--允许应用程序访问WIFI网卡的网络信息-->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <!--允许应用程序完全使用网络-->
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />


    <!--唤醒锁定权限-->
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <!--桌面悬浮权限-->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <!--查询所有应用权限-->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />


    <!-- Tell the system this app requires OpenGL ES 3.1. -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <!--声明应用支持哪些纹理压缩格式-->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
    <uses-permission android:name="android.permission.QUERY_ALL_PACKAGES" />
    <!--android 11 获取外部存储权限-->
    <uses-permission android:name="android.permission.MANAGE_EXTERNAL_STORAGE" />

</manifest>