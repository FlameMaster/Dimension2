plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}
android {
    namespace 'com.melvinhou.dimension2'
    compileSdk 33
//    compileSdkVersion 31
//    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.melvinhou.dimension2"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 1
        versionName "1.0.0"
        buildConfigField "String", "channel_customer", "\"${config_customer.channelName}\""
        buildConfigField "String", "channel_business", "\"${config_business.channelName}\""
//        resValue "string", "my_string", "MyApp"
//        resValue "bool", "my_bool", "true"
//        resValue "integer", "my_integer", "1"
//        buildConfigField "String", "my_string", '"MyApp"'
//        buildConfigField "boolean", "my_bool", "true"
//        buildConfigField "int", "my_integer", "1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //设置支持的so库框架
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        //指定room.schemaLocation生成的文件路径
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        // 只保留指定和默认资源
        resConfigs('zh-rCN')
    }

    signingConfigs {
        config {
            keyAlias 'melvinhou'
            keyPassword 'fairytail'
            storeFile file('../dimension.jks')
            storePassword 'love520'
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "2ciyuan${variant.flavorName}_${variant.versionName}_${new Date().format("MM-dd")}.apk"
        }
    }

    buildTypes {
        release {
            //minifyEnabled false
            minifyEnabled true   // 混淆
            zipAlignEnabled true // Zipalign优化
            shrinkResources true // 移除无用的resource文件
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


    sourceSets {
        main {
            java.srcDirs = [
                    'src/main/java',
                    'src/exert/java',//一些演示dome
                    'src/fun/java'//更复杂的功能演示
            ]
            jniLibs.srcDirs = ['libs']
            res.srcDirs = [
                    'src/main/res',
                    'src/exert/res',
                    'src/fun/res'
            ]
        }
    }


    //通过维度组合配置不同参数
    flavorDimensions "target","channel"
    productFlavors {
        official {
            dimension "channel"
            buildConfigField "int", "channel_type", "0"
        }
        google {
            dimension "channel"
            buildConfigField "int", "channel_type", "1"
        }
        sample {
            dimension "target"
            buildConfigField "int", "target_type", "0"
            //设置参数方法1
            manifestPlaceholders = [
                    CHANNEL_VALUE: "sample",
            ]
        }
        customer {
            dimension "target"
            applicationId config_customer.applicationId
            versionName config_customer.versionName
            versionCode config_customer.versionCode
//            resValue "string", "app_name", config_customer.appName
//            resValue "color", "mainColor", config_customer.colorMain
            buildConfigField "int", "target_type", "1"
            //设置参数方法1
            manifestPlaceholders = [
                    app_icon     : config_customer.appIcon,
                    CHANNEL_VALUE: config_customer.channelName,
            ]
        }
        business {
            dimension "target"
            applicationId config_business.applicationId
            versionName config_business.versionName
            versionCode config_business.versionCode
//            applicationIdSuffix ".business"
//            versionNameSuffix "-business"
//            resValue "string", "app_name", config_business.appName
//            resValue "color", "mainColor", config_business.colorMain
            buildConfigField "int", "target_type", "2"
            //设置参数方法1
            manifestPlaceholders = [
                    app_icon     : config_business.appIcon,
                    app_name     : config_business.appName,
                    CHANNEL_VALUE: config_business.channelName,
            ]
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api project(':kami')
    api project(':knight')
    api project(':media-sample')
    api project(':game-sample')
    api project(':model3d-sample')
    api project(':ar-sample')
    api project(':im-sample')
    api project(':tiktok-sample')
    api project(':user-sample')


    implementation 'com.google.firebase:firebase-crashlytics-buildtools:2.8.1'

//    implementation "androidx.lifecycle:lifecycle-viewmodel:1.1.1"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    implementation 'androidx.navigation:navigation-fragment:2.4.1'
//    implementation 'androidx.navigation:navigation-ui:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //
    annotationProcessor 'androidx.room:room-compiler:2.4.2'
    implementation 'androidx.room:room-runtime:2.4.2'
    implementation 'androidx.room:room-rxjava2:2.4.2'

    //相机
    def camerax_version = "1.1.0"
    implementation "androidx.camera:camera-camera2:1.1.0"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"
//    implementation 'com.rmtheis:tess-two:9.1.0'//文字识别
    implementation 'com.google.zxing:core:3.4.0'//二维码识别

    //ar
    implementation 'com.google.ar:core:1.18.0'
//    implementation 'de.javagl:obj:0.3.0'

    //控制状态栏
//    implementation 'androidx.core:core:1.6.0'
    //大图查看器
    implementation 'com.github.SherlockGougou:BigImageViewPager:androidx-7.0.3'

}
